{"version":3,"sources":["redux/auth/auth-selector.js","components/UserMenu.js","components/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","redux/auth/auth-reducer.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js","redux/phoneBook/phoneBook-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js"],"names":["state","auth","isLogIn","user","name","mapDispatchToProps","onLogOut","authOperations","logOut","connect","authSelectors","Button","color","type","onClick","AuthNav","component","NavLink","exact","to","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textDecoration","isAuthenticated","classes","className","AppBar","position","Container","maxWidth","Toolbar","id","Typography","variant","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useSelector","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","dispatch","useDispatch","useEffect","getCurrentUser","fallback","path","initialUserState","email","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","ContactsReducer","fetchContactSuccess","addContactSuccess","deleteContactSuccess","filter","FilterReducer","filterUpdate","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devToolss","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","fetchContactRequest","createAction","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","axios","defaults","baseURL","set","headers","common","Authorization","unset","register","credentials","a","registerRequest","post","response","data","message","logIn","console","log","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.76c9b4f3.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n\r\nconst getIsAuthenticated = state => state.auth.isLogIn;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { getIsAuthenticated, getUserName };\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\nimport authSelectors from '../redux/auth/auth-selector';\r\n\r\nconst UserMenu = ({ name, onLogOut }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>Welcome, {name}!</p>\r\n      </div>\r\n      <Button color=\"inherit\" type=\"button\" onClick={onLogOut}>\r\n        Logout\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogOut: authOperations.logOut,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <>\r\n      <Button color=\"inherit\" component={NavLink} exact to=\"/register\">\r\n        Registration\r\n      </Button>\r\n      <Button color=\"inherit\" component={NavLink} exact to=\"/login\">\r\n        Login\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selector';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst AppBarComp = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar id=\"toolbar-menu\">\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              className={classes.title}\r\n              component={NavLink}\r\n              exact\r\n              to=\"/\"\r\n            >\r\n              Main\r\n            </Typography>\r\n\r\n            {isAuthenticated && (\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                className={classes.title}\r\n                component={NavLink}\r\n                exact\r\n                to=\"/contacts\"\r\n              >\r\n                PhoneBook\r\n              </Typography>\r\n            )}\r\n\r\n            {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBarComp);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selector';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nexport default function PrivateRoute({ children, redirectTo, ...routeProps }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selector';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({ redirectTo, children, ...routeProps }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\nimport AppBarComp from './AppBar/AppBar';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PablicRoute from './PublicRoute';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('../pages/HomePage' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import('../pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('../pages/LoginPage' /* webpackChunkName: \"login-page\" */),\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import('../pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppBarComp />\r\n      <Suspense fallback={<p>Wait...</p>}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <PablicRoute\r\n            path=\"/register\"\r\n            restricted\r\n            redirectTo=\"/contacts\"\r\n            component={RegisterPage}\r\n          />\r\n          <PablicRoute\r\n            path=\"/login\"\r\n            restricted\r\n            redirectTo=\"/contacts\"\r\n            component={LoginPage}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/contacts\"\r\n            redirectTo=\"/login\"\r\n            component={ContactsPage}\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\n// class App extends Component {\r\n//   componentDidMount() {\r\n//     this.props.onGetCurrentUser();\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <AppBarComp />\r\n//         <Suspense fallback={<p>Wait...</p>}>\r\n//           <Switch>\r\n//             <Route exact path=\"/\" component={HomePage} />\r\n//             <PablicRoute\r\n//               path=\"/register\"\r\n//               restricted\r\n//               redirectTo=\"/contacts\"\r\n//               component={RegisterPage}\r\n//             />\r\n//             <PablicRoute\r\n//               path=\"/login\"\r\n//               restricted\r\n//               redirectTo=\"/contacts\"\r\n//               component={LoginPage}\r\n//             />\r\n//             <PrivateRoute\r\n//               path=\"/contacts\"\r\n//               redirectTo=\"/login\"\r\n//               component={ContactsPage}\r\n//             />\r\n//             <Redirect to=\"/\" />\r\n//           </Switch>\r\n//         </Suspense>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onGetCurrentUser: authOperations.getCurrentUser,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isLogIn = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({ user, isLogIn, token, error });\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  filterUpdate,\r\n  fetchContactSuccess,\r\n} from './phoneBook-actions';\r\n\r\nconst ContactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst FilterReducer = createReducer('', {\r\n  [filterUpdate]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  ContactsReducer,\r\n  FilterReducer,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from '../redux/auth/auth-reducer';\r\nimport contactsReducer from '../redux/phoneBook/phoneBook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devToolss: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App.js';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction(\r\n  'contacts/contacts/addContactRequest',\r\n);\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterUpdate = createAction('app/changeFilter');\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  console.log(credentials);\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\nexport default {\r\n  token,\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  getCurrentUser,\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n"],"sourceRoot":""}